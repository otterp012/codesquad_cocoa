
// 브라우져 rendering 과정

// rendering -> html, css, js를 해석해서 화면에 어떠한 것들을 표현하는 과정.

// 1. 사이트 접속시 브라우저에게는 어떤일들이 일어나는가?
// 1) 주소창에 무언가를 입력하면,
// 2) domain에 대한 ip주소-인터넷프로토콜-를 확인한다. (domain확인 서버가 따로있음.)
// 3) 그 ip로 네트워크 통신으로 타고 감.
// 4) 요청 url을 포함해 서버로 이동, 

// 4-1) 서버는 다시 주소를 분석함
// 4-2) 프로필이라는 페이지라면, 클라이언트의 요청에 응답하고자 함.
// 4-3) 응답이오면 클라이언트는

// 5) 받은 HTML 페이지를 파싱함
// 5-1) css 파일을 포함하고 있으면, css 파일을 요청함  
// 5-2) css파일을 받고, 파싱함
// 5-3) js 파일을 포함하고 있으면 js파일을 요청함
// 5-4) js 파일을 받고, 파싱함

// - 이러한 자원들을 resource라고함

// 6) html을 DOM tree 계층적인 객체형태로 만들어 보관함.
// 7) css도 tee 계층적인 객체 형태로 만들어 보관함
// 8) 두개를 합쳐서, Render Tree를 만듦



// Traditional Page Lifecycle

// SPA Lifecycle
// (single page)

// HTML, CSS
// - 구조와 설계 -> 스타일 입히기
// - 의미있는 태그의 사용(어떤 태그들을 사용할 것인가?) , 시맨틱
// - 어떠한 태그를 쓰는지 어떻게 고를 것인가?

// - HTML 작업을 한다는 것은, 어떠한 구조를 만드는 것.
// - CSS작업은 설계를 한 이후에.
// - 검색하는 훈련?


// 핸들러함수 -> handler

